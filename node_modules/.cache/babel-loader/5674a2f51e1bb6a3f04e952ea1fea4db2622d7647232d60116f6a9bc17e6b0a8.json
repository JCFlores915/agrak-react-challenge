{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { userApi } from \"../api/api\";\nconst getListUser = async () => {\n  const {\n    data\n  } = await userApi.get('/users');\n  return data;\n};\nconst getUser = async id => {\n  const {\n    data\n  } = await userApi.get(`/users/${id}`);\n  return data;\n};\nconst saveUser = async function (id) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    data\n  } = await userApi.post(`/users/${id}`, {\n    first_name: \"Juan Flores\",\n    avatar: \"https://images.unsplash.com/photo-1517849845537-4d257902454a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=735&q=80\",\n    second_name: \"Test 1\",\n    \"email\": \"JuanTest1@gmail.com\"\n  });\n  return data;\n};\nconst updateUser = async id => {\n  const {\n    data\n  } = await userApi.put(`/users/${id}`);\n  return data;\n};\nconst deleteUser = async id => {\n  const {\n    data\n  } = await userApi.delete(`/users/${id}`);\n  return data;\n};\nexport const useListUser = () => {\n  _s();\n  const query = useQuery(['listUser'], () => getListUser());\n  return {\n    query\n  };\n};\n_s(useListUser, \"c7fxJWDO4uMGjIdKMJSj1aiS9wg=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","userApi","getListUser","data","get","getUser","id","saveUser","params","post","first_name","avatar","second_name","updateUser","put","deleteUser","delete","useListUser","query"],"sources":["/Users/jcfloresg/Cursos/REACT/agrak-react-challenge/src/hooks/useUsers.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { userApi } from \"../api/api\";\nimport { User } from \"../interfaces/user\";\n\n\nconst getListUser = async():Promise<User[]> => {\n    const {data} = await userApi.get<User[]>('/users');\n\n    return data;\n}\n\nconst getUser = async(id:number):Promise<User> => {\n    const {data} = await userApi.get<User>(`/users/${id}`);\n\n    return data;\n}\n\n\nconst saveUser = async(id:number, params = {}):Promise<User> => {\n    const {data} = await userApi.post<User>(\n        `/users/${id}`,\n        {\n            first_name: \"Juan Flores\",\n            avatar: \"https://images.unsplash.com/photo-1517849845537-4d257902454a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=735&q=80\",\n            second_name: \"Test 1\",\n            \"email\": \"JuanTest1@gmail.com\",\n        }\n        );\n\n    return data;\n}\n\nconst updateUser = async(id:number):Promise<User> => {\n    const {data} = await userApi.put<User>(`/users/${id}`);\n\n    return data;\n}\n\nconst deleteUser = async(id:number):Promise<User> => {\n    const {data} = await userApi.delete<User>(`/users/${id}`);\n\n    return data;\n}\n\nexport const useListUser = () =>{\n    const query = useQuery(\n        ['listUser'],\n        () => getListUser()\n    );\n\n    return {query};\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAQ,YAAY;AAIpC,MAAMC,WAAW,GAAG,YAA2B;EAC3C,MAAM;IAACC;EAAI,CAAC,GAAG,MAAMF,OAAO,CAACG,GAAG,CAAS,QAAQ,CAAC;EAElD,OAAOD,IAAI;AACf,CAAC;AAED,MAAME,OAAO,GAAG,MAAMC,EAAS,IAAmB;EAC9C,MAAM;IAACH;EAAI,CAAC,GAAG,MAAMF,OAAO,CAACG,GAAG,CAAQ,UAASE,EAAG,EAAC,CAAC;EAEtD,OAAOH,IAAI;AACf,CAAC;AAGD,MAAMI,QAAQ,GAAG,gBAAMD,EAAS,EAAgC;EAAA,IAA9BE,MAAM,uEAAG,CAAC,CAAC;EACzC,MAAM;IAACL;EAAI,CAAC,GAAG,MAAMF,OAAO,CAACQ,IAAI,CAC5B,UAASH,EAAG,EAAC,EACd;IACII,UAAU,EAAE,aAAa;IACzBC,MAAM,EAAE,+JAA+J;IACvKC,WAAW,EAAE,QAAQ;IACrB,OAAO,EAAE;EACb,CAAC,CACA;EAEL,OAAOT,IAAI;AACf,CAAC;AAED,MAAMU,UAAU,GAAG,MAAMP,EAAS,IAAmB;EACjD,MAAM;IAACH;EAAI,CAAC,GAAG,MAAMF,OAAO,CAACa,GAAG,CAAQ,UAASR,EAAG,EAAC,CAAC;EAEtD,OAAOH,IAAI;AACf,CAAC;AAED,MAAMY,UAAU,GAAG,MAAMT,EAAS,IAAmB;EACjD,MAAM;IAACH;EAAI,CAAC,GAAG,MAAMF,OAAO,CAACe,MAAM,CAAQ,UAASV,EAAG,EAAC,CAAC;EAEzD,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMc,WAAW,GAAG,MAAK;EAAA;EAC5B,MAAMC,KAAK,GAAGlB,QAAQ,CAClB,CAAC,UAAU,CAAC,EACZ,MAAME,WAAW,EAAE,CACtB;EAED,OAAO;IAACgB;EAAK,CAAC;AAClB,CAAC;AAAA,GAPYD,WAAW;EAAA,QACNjB,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}