{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { userApi } from '../api/api';\nconst getListUser = async () => {\n  const {\n    data\n  } = await userApi.get('/users');\n  return data;\n};\nconst getUser = async id => {\n  const {\n    data\n  } = await userApi.get(`/users/${id}`);\n  return data;\n};\nconst saveUser = async (id, formData) => {\n  const data = await userApi.post('/users', FormData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return data.data;\n};\nconst updateUser = async id => {\n  const {\n    data\n  } = await userApi.put(`/users/${id}`);\n  return data;\n};\nconst deleteUser = async id => {\n  const {\n    data\n  } = await userApi.delete(`/users/${id}`);\n  return data;\n};\nexport const useListUser = () => {\n  _s();\n  const query = useQuery(['listUser'], () => getListUser());\n  return {\n    query\n  };\n};\n_s(useListUser, \"c7fxJWDO4uMGjIdKMJSj1aiS9wg=\", false, function () {\n  return [useQuery];\n});\nexport const useSaveUser = () => {\n  _s2();\n  const query = useQuery(['listUser'], () => getListUser());\n  return {\n    query\n  };\n};\n_s2(useSaveUser, \"c7fxJWDO4uMGjIdKMJSj1aiS9wg=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","userApi","getListUser","data","get","getUser","id","saveUser","formData","post","FormData","headers","updateUser","put","deleteUser","delete","useListUser","query","useSaveUser"],"sources":["/Users/jcfloresg/Cursos/REACT/agrak-react-challenge/src/hooks/useUsers.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { userApi, header } from '../api/api';\nimport { User } from \"../interfaces/user\";\n\n\nconst getListUser = async (): Promise<User[]> => {\n    const { data } = await userApi.get<User[]>('/users');\n\n    return data;\n}\n\nconst getUser = async (id: number): Promise<User> => {\n    const { data } = await userApi.get<User>(`/users/${id}`);\n\n    return data;\n}\n\n\nconst saveUser = async (id: number, formData: FormData): Promise<User> => {\n    const data = await userApi.post<User>(\n        '/users',\n        FormData,\n        {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            }\n        }\n    );\n\n    return data.data;\n}\n\nconst updateUser = async (id: number): Promise<User> => {\n    const { data } = await userApi.put<User>(`/users/${id}`);\n\n    return data;\n}\n\nconst deleteUser = async (id: number): Promise<User> => {\n    const { data } = await userApi.delete<User>(`/users/${id}`);\n\n    return data;\n}\n\nexport const useListUser = () => {\n    const query = useQuery(\n        ['listUser'],\n        () => getListUser()\n    );\n\n    return { query };\n}\n\n\nexport const useSaveUser = () => {\n    const query = useQuery(\n        ['listUser'],\n        () => getListUser()\n    );\n\n    return { query };\n}\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAgB,YAAY;AAI5C,MAAMC,WAAW,GAAG,YAA6B;EAC7C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMF,OAAO,CAACG,GAAG,CAAS,QAAQ,CAAC;EAEpD,OAAOD,IAAI;AACf,CAAC;AAED,MAAME,OAAO,GAAG,MAAOC,EAAU,IAAoB;EACjD,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMF,OAAO,CAACG,GAAG,CAAQ,UAASE,EAAG,EAAC,CAAC;EAExD,OAAOH,IAAI;AACf,CAAC;AAGD,MAAMI,QAAQ,GAAG,OAAOD,EAAU,EAAEE,QAAkB,KAAoB;EACtE,MAAML,IAAI,GAAG,MAAMF,OAAO,CAACQ,IAAI,CAC3B,QAAQ,EACRC,QAAQ,EACR;IACIC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CACJ;EAED,OAAOR,IAAI,CAACA,IAAI;AACpB,CAAC;AAED,MAAMS,UAAU,GAAG,MAAON,EAAU,IAAoB;EACpD,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMF,OAAO,CAACY,GAAG,CAAQ,UAASP,EAAG,EAAC,CAAC;EAExD,OAAOH,IAAI;AACf,CAAC;AAED,MAAMW,UAAU,GAAG,MAAOR,EAAU,IAAoB;EACpD,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMF,OAAO,CAACc,MAAM,CAAQ,UAAST,EAAG,EAAC,CAAC;EAE3D,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMa,WAAW,GAAG,MAAM;EAAA;EAC7B,MAAMC,KAAK,GAAGjB,QAAQ,CAClB,CAAC,UAAU,CAAC,EACZ,MAAME,WAAW,EAAE,CACtB;EAED,OAAO;IAAEe;EAAM,CAAC;AACpB,CAAC;AAAA,GAPYD,WAAW;EAAA,QACNhB,QAAQ;AAAA;AAS1B,OAAO,MAAMkB,WAAW,GAAG,MAAM;EAAA;EAC7B,MAAMD,KAAK,GAAGjB,QAAQ,CAClB,CAAC,UAAU,CAAC,EACZ,MAAME,WAAW,EAAE,CACtB;EAED,OAAO;IAAEe;EAAM,CAAC;AACpB,CAAC;AAAA,IAPYC,WAAW;EAAA,QACNlB,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}