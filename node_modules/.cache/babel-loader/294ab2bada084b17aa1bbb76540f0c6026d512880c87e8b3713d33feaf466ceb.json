{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { userApi } from '../api/api';\nconst getListUser = async () => {\n  const {\n    data\n  } = await userApi.get('/users');\n  return data;\n};\nexport const saveUser = async formData => {\n  const {\n    data\n  } = await userApi.post('/users', formData);\n  return data;\n};\nconst getUser = async id => {\n  const {\n    data\n  } = await userApi.get(`/users/${id}`);\n  return data;\n};\nexport const updateUser = async _ref => {\n  let {\n    id,\n    formData\n  } = _ref;\n  const {\n    data\n  } = await userApi.put(`/users/${id}`, formData);\n  return data;\n};\nexport const deleteUser = async id => {\n  const {\n    data\n  } = await userApi.delete(`/users/${id}`);\n  return data;\n};\nexport const useListUser = () => {\n  _s();\n  const query = useQuery(['listUser'], () => getListUser());\n  return {\n    query\n  };\n};\n_s(useListUser, \"c7fxJWDO4uMGjIdKMJSj1aiS9wg=\", false, function () {\n  return [useQuery];\n});\nexport const useGetUser = id => {\n  _s2();\n  const query = useQuery(['user'], () => getUser(id));\n  return {\n    query\n  };\n};\n_s2(useGetUser, \"c7fxJWDO4uMGjIdKMJSj1aiS9wg=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","userApi","getListUser","data","get","saveUser","formData","post","getUser","id","updateUser","put","deleteUser","delete","useListUser","query","useGetUser"],"sources":["/Users/jcfloresg/Cursos/REACT/agrak-react-challenge/src/hooks/useUsers.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport { userApi, header } from '../api/api';\nimport { User } from \"../interfaces/user\";\n\n\nconst getListUser = async (): Promise<User[]> => {\n    const { data } = await userApi.get<User[]>('/users');\n\n    return data;\n}\n\nexport const saveUser = async (formData: {}): Promise<User> => {\n    const {data} = await userApi.post<User>(\n        '/users',\n        formData\n    );\n\n    return data;\n}\n\nconst getUser = async (id:string): Promise<User> => {\n    const { data } = await userApi.get<User>(`/users/${id}`);\n\n    return data;\n}\n\nexport const updateUser = async ({id, formData}:{id:string, formData:{}}): Promise<User> => {\n    const { data } = await userApi.put<User>(`/users/${id}`, formData);\n\n    return data;\n}\n\nexport const deleteUser = async (id: string): Promise<User> => {\n    const { data } = await userApi.delete<User>(`/users/${id}`);\n\n    return data;\n}\n\n\nexport const useListUser = () => {\n    const query = useQuery(\n        ['listUser'],\n        () => getListUser()\n    );\n\n    return { query };\n}\n\nexport const useGetUser = (id:string) => {\n    const query = useQuery(\n        ['user'],\n        () => getUser(id)\n    );\n\n    return { query };\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,OAAO,QAAgB,YAAY;AAI5C,MAAMC,WAAW,GAAG,YAA6B;EAC7C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMF,OAAO,CAACG,GAAG,CAAS,QAAQ,CAAC;EAEpD,OAAOD,IAAI;AACf,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAOC,QAAY,IAAoB;EAC3D,MAAM;IAACH;EAAI,CAAC,GAAG,MAAMF,OAAO,CAACM,IAAI,CAC7B,QAAQ,EACRD,QAAQ,CACX;EAED,OAAOH,IAAI;AACf,CAAC;AAED,MAAMK,OAAO,GAAG,MAAOC,EAAS,IAAoB;EAChD,MAAM;IAAEN;EAAK,CAAC,GAAG,MAAMF,OAAO,CAACG,GAAG,CAAQ,UAASK,EAAG,EAAC,CAAC;EAExD,OAAON,IAAI;AACf,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,cAAkE;EAAA,IAA3D;IAACD,EAAE;IAAEH;EAAiC,CAAC;EACpE,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMF,OAAO,CAACU,GAAG,CAAQ,UAASF,EAAG,EAAC,EAAEH,QAAQ,CAAC;EAElE,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAOH,EAAU,IAAoB;EAC3D,MAAM;IAAEN;EAAK,CAAC,GAAG,MAAMF,OAAO,CAACY,MAAM,CAAQ,UAASJ,EAAG,EAAC,CAAC;EAE3D,OAAON,IAAI;AACf,CAAC;AAGD,OAAO,MAAMW,WAAW,GAAG,MAAM;EAAA;EAC7B,MAAMC,KAAK,GAAGf,QAAQ,CAClB,CAAC,UAAU,CAAC,EACZ,MAAME,WAAW,EAAE,CACtB;EAED,OAAO;IAAEa;EAAM,CAAC;AACpB,CAAC;AAAA,GAPYD,WAAW;EAAA,QACNd,QAAQ;AAAA;AAQ1B,OAAO,MAAMgB,UAAU,GAAIP,EAAS,IAAK;EAAA;EACrC,MAAMM,KAAK,GAAGf,QAAQ,CAClB,CAAC,MAAM,CAAC,EACR,MAAMQ,OAAO,CAACC,EAAE,CAAC,CACpB;EAED,OAAO;IAAEM;EAAM,CAAC;AACpB,CAAC;AAAA,IAPYC,UAAU;EAAA,QACLhB,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}